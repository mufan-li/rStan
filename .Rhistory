mtcars
mtcars[1,]
mtcars[1:5,1:2]
testdf <- mtcars[1:2,1:2]
testdf
table
help(table)
rpois(100,5)
table(rpois(100,5))
library("datasets")
statesData <- as.data.frame(state.x77)
names(statesData)
cor
names(statesData)
states <- as.data.frame(state.x77)
names(states)
gsub(" ","[.]",names(states))
gsub(" ",".",names(states))
names(states) <- gsub(" ",".",names(states))
state.division
names(state.division)
length(state.division)
state.division
states$Division <- state.division
cor(states)
states
names(states)
cor(states[,1:8])
states <- as.data.frame(state.x77)
names(states) <- gsub(" ",".",names(states))
states$Division <- state.division
states$Density <- 1000 * states$Population / states$Area
names(states)
cor(states[,c("Life.Exp","Density","Income","Murder","HS Grad","Frost")])
cor(states[,c("Life.Exp","Density","Income","Murder","HS.Grad","Frost")])
library("ggplot2")
melt(states[,c("Life.Exp","Density","Income","Murder","HS.Grad","Frost")])
library("plyr")
melt(states[,c("Life.Exp","Density","Income","Murder","HS.Grad","Frost")])
library("reshape")
library("reshape2")
melt(states[,c("Life.Exp","Density","Income","Murder","HS.Grad","Frost")])
states_melt_data <- melt(states[,c("Life.Exp","Density","Income","Murder","HS.Grad","Frost")])
names(states_melt_data)
ggplot(states_melt_data,aes(x=value)) + geom_bar() + facet_wrap(~variable)
ggplot(states_melt_data,aes(x=value)) + geom_bar() +
facet_wrap(~variable, scales = "free")
ggplot(states_melt_data,aes(x=value)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette="Paired")
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette="Paired")
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette=1)
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette=2)
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette=3)
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette=4)
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette=5)
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer()
ggplot(states_melt_data,aes(x=value,fill=variable)) + geom_bar() +
facet_wrap(~variable, scales = "free") + scale_fill_brewer(palette=3)
states_melt_data
names(states)
states[1,]
states$Division
n <- 100
sex <- rep(c("Male","Female"),each = n/2)
sex
df <- data.frame(sex = sex)
df
df$mark <- 70 + 5*(df$sex == "Female") + rnorm(n, 0, 10)
df
with(df, tapply(mark, sex, mean))
help(read.fwf)
"      Hello        "
"Hello"
help(merge)
install.packages("R.Matlab")
install.packages("R.matlab")
setwd("~/GitHub/rStan/")
source("functions.R")
rating_data0 <- read.csv("ua.base",sep="\t", header=F)
names(rating_data0) <- c("id","item","rating")
rating_data0 <- rating_data0[,1:3]
test_data0 <- read.csv("ua.test",sep="\t", header=F)
names(test_data0) <- c("id","item","rating")
test_data0 <- test_data0[,1:3]
filter_size <- 10
rating_data <- subset(rating_data0, id<=filter_size & item <= filter_size)
test_data <- subset(test_data0, id<=filter_size & item <= filter_size)
iter_list <- c(20,50)
chain_list <- c(1,2,5)
d_list = c(2,5,10)
execution_data <- NULL
m_pred_list <- list()
for (iter in iter_list) {
for (chains in chain_list) {
for (d in d_list) {
start_time <- Sys.time()
source("execute.R")
time_elapsed <- Sys.time() - start_time
exec_data_instance <- data.frame(
iter = iter, chains = chains, d = d,
mse = mse_pred, time = time_elapsed
)
execution_data <- rbind(execution_data, exec_data_instance)
# m_pred_list <- unlist(list(m_pred_list, list(m_pred)), recursive=FALSE)
print(paste0("Iteration: ", iter, ", Chains: ", chains,
", d: ", d, ", MSE: ", mse_pred))
save.image("~/GitHub/rStan/2015-12-08_Workspace.RData")
}
}
}
# save.image("~/GitHub/rStan/2015-12-08_Workspace.RData")
# load("~/GitHub/rStan/2015-12-08_Test_Workspace.RData")
execution_data$dimension <- paste("Dimension = ",execution_data$d)
execution_data$dimension <- factor(execution_data$dimension,
levels = unique(execution_data$dimension))
ggplot(execution_data,
aes(x=as.character(iter),y=mse,fill=as.character(chains))) +
geom_bar(stat="identity",position="dodge") + facet_wrap(~dimension) +
scale_fill_brewer("Number of Chains", palette="Paired") +
scale_x_discrete("Number of Iterations") +
scale_y_continuous("Mean Squared Error")
install.packages("xtable")
library(xtable)
xtable(execution_data[,1:4])
install.packages("sendmailR")
install.packages("mailR")
library(mailR)
sender <- "mufan.li.git@gmail.com"
recipients <- c("mufan.li@outlook.com")
subject <- "Test"
body <- "Test Body"
smtp <- list(host.name = "smtp.gmail.com",
port = 465,
user.name = "mufan.li.git@gmail.com",
passwd = "GoodLuck",
ssl = TRUE)
smtp
send.mail(from = sender,
to = recipients,
subject = subject,
body = body,
smtp = smtp,
authenticate = T,
send = T)
